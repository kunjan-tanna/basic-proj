{"version":3,"sources":["imgs/forgot-password.png","history.js","configs/axiosConfig.js","navbar/menu.js","redux/actions/auth/auth.js","PrivateRoute.js","AdminRoute.js","configs/imgConfig.js","views/pages/UserDashboard/UserDashboard.js","views/pages/UserDashboard/UpdateUser.js","views/pages/AdminDashboard/AdminDashboard.js","views/pages/UserDashboard/Home.js","views/pages/authentication/Login.js","views/pages/authentication/Register.js","views/pages/authentication/ForgotPassword.js","views/pages/authentication/ResetPassword.js","Routes.js","App.js","redux/reducers/global/global.js","redux/reducers/auth/loginReducer.js","redux/reducers/auth/index.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","index.js"],"names":["module","exports","history","createHashHistory","require","config","axiosInstance","axios","create","baseURL","process","API_URL","Menu","props","handleitem","logout","push","state","userdata","userInfo","console","log","className","to","exact","activeStyle","color","this","onClick","e","Component","connect","auth","login","dispatch","type","withRouter","PrivateRoute","component","rest","render","role","AdminRoute","REACT_APP_PUBLIC_PATH","UserDashboard","componentDidMount","rowData","setState","Row","Col","sm","Card","CardHeader","CardBody","ListGroup","ListGroupItem","Media","left","object","src","PATH","avtar","alt","height","width","md","firstName","lastName","email","mobile","address","React","UpdateUser","id","_id","a","get","res","UserAction","then","formData","data","handleInput","event","persist","prevState","target","name","value","handleavtar","files","handleFormSubmit","bodyFormData","FormData","append","status","post","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","error","catch","handleReset","Button","outline","Form","onSubmit","preventDefault","FormGroup","Label","Input","placeholder","onChange","CustomInput","AdminDashboard","Home","Login","user","password","response","payload","accessToken","token","counter","xl","lg","label","Register","erroMsg","required","ForgotPassword","obj","put","fgImg","CardTitle","ResetPassword","newPass","resetLink","location","search","split","Routes","path","App","initialState","isSuccess","global","action","userRole","authReducers","combineReducers","Object","assign","persistConfig","key","storage","whitelist","rootReducer","globalReducer","persistReducer","middlewares","thunk","createDebounce","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.98e533a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forgot-password.63f5a96a.png\";","import { createHashHistory } from \"history\";\r\nexport let history = createHashHistory();\r\n\r\n// import { createBrowserHistory } from \"history\";\r\n// export let history = createBrowserHistory();\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL:\r\n      process.env.API_URL || \"https://immense-mesa-71524.herokuapp.com/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { logout } from \"../redux/actions/auth/auth\";\r\nimport { history } from \"../history\";\r\n\r\nclass Menu extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         userdata: this.props.userInfo,\r\n      };\r\n      console.log(\"UserData-------------\", this.state.userdata);\r\n   }\r\n   handleitem = () => {\r\n      this.props.logout();\r\n      // console.log('LOGOUT',props.logout)\r\n      this.props.history.push(\"/login\");\r\n   };\r\n   // currentTab = (abc, path) => {\r\n   //    console.log(\"ABC\", abc);\r\n   //    if (history.location.pathname === path) {\r\n   //       return { color: \"#2ecc72\" };\r\n   //    } else {\r\n   //       return { color: \"blue\" };\r\n   //    }\r\n   // };\r\n   // componentWillReceiveProps = (nextProps, path) => {\r\n   //    console.log(\"NEXTPROPS\", nextProps);\r\n   //    console.log(\"NEXTPROPS-path\", path);\r\n   // };\r\n   render() {\r\n      // const currentTab = (history, path) => {\r\n      //    console.log(history);\r\n      //    if (history.location.pathname === path) {\r\n      //       return { color: \"#2ecc72\" };\r\n      //    } else {\r\n      //       return { color: \"blue\" };\r\n      //    }\r\n      // };\r\n      return (\r\n         <div>\r\n            <ul className=\"nav nav-tabs bg-blue\">\r\n               <li className=\"nav-item\">\r\n                  <NavLink\r\n                     to=\"/\"\r\n                     exact\r\n                     className=\"nav-link\"\r\n                     activeStyle={{ color: \"red\" }}\r\n                     //style={currentTab(history, \"/\")}\r\n                  >\r\n                     Home\r\n                  </NavLink>\r\n               </li>\r\n               <li className=\"nav-item\">\r\n                  <NavLink\r\n                     to=\"/user-dashboard\"\r\n                     activeStyle={{ color: \"red\" }}\r\n                     //style={currentTab(history, \"/user-dashboard\")}\r\n                     className=\"nav-link\"\r\n                  >\r\n                     User Dashboard\r\n                  </NavLink>\r\n               </li>\r\n               <li className=\"nav-item\">\r\n                  <NavLink\r\n                     to=\"/admin-dashboard\"\r\n                     className=\"nav-link\"\r\n                     activeStyle={{ color: \"red\" }}\r\n\r\n                     //style={currentTab(history, \"/admin-dashboard\")}\r\n                  >\r\n                     Admin Dashboard\r\n                  </NavLink>\r\n               </li>\r\n               {!this.state.userdata && (\r\n                  <li className=\"nav-item\">\r\n                     <NavLink to=\"/login\" className=\"nav-link\">\r\n                        login\r\n                     </NavLink>\r\n                  </li>\r\n               )}\r\n               <li className=\"nav-item\">\r\n                  <span\r\n                     className={\"nav-link text-warning\"}\r\n                     onClick={(e) => this.handleitem()}\r\n                  >\r\n                     Logout\r\n                  </span>\r\n               </li>\r\n               {/* {this.state.userdata && this.state.userdata.role === \"user\" && (\r\n                  \r\n               )} */}\r\n               {/* {this.state.userdata && this.state.userdata.role === \"admin\" && (\r\n                  \r\n               )} */}\r\n               {/* {this.state.userdata.role &&\r\n               this.state.userdata.role === \"admin\" ? (\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/user-dashboard\" className=\"nav-link\">\r\n                        User Dashboard\r\n                     </Link>\r\n                  </li>\r\n               ) : (\r\n                  <Redirect to=\"/login\" />\r\n               )} */}\r\n               {/* {this.state.userdata && (\r\n                 \r\n               )} */}\r\n\r\n               {/* <Link\r\n                     to=\"/basic-proj/login\"\r\n                     className=\"nav-link\"\r\n                     style={{ marginLeft: \"1050px\" }}\r\n                  >\r\n                     Login\r\n                  </Link> */}\r\n            </ul>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nexport default connect(mapStateToProps, { logout })(withRouter(Menu));\r\n","import axios from \"../../../configs/axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route, Redirect, Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\n//Create Add User\r\nexport const RegUsers = (data) => async (dispatch) => {\r\n   console.log(\"ADD USER\", data);\r\n   const bodyFormData = new FormData();\r\n   bodyFormData.append(\"firstName\", data.firstName);\r\n   bodyFormData.append(\"lastName\", data.lastName);\r\n   bodyFormData.append(\"email\", data.email);\r\n   bodyFormData.append(\"password\", data.password);\r\n   bodyFormData.append(\"address\", data.address);\r\n   bodyFormData.append(\"mobile\", data.mobile);\r\n   bodyFormData.append(\"avtar\", data.avtar);\r\n   // bodyFormData.append('status',data.status)\r\n   const res = await axios.post(\"create/users\", bodyFormData);\r\n   console.log(\"ADD USER=======\", res);\r\n   return res;\r\n};\r\n\r\nexport const loginWithJWT = (user) => {\r\n   return (dispatch) => {\r\n      axios\r\n         .post(\"/signin\", {\r\n            email: user.email,\r\n            password: user.password,\r\n         })\r\n         .then((response) => {\r\n            let userInfo = response.data.user;\r\n            // console.log(\"Login DATA\", this.props);\r\n            if (userInfo) {\r\n               dispatch({\r\n                  type: \"LOGIN_WITH_JWT\",\r\n                  payload: {\r\n                     userInfo,\r\n                     accessToken: response.data.token,\r\n                  },\r\n               });\r\n               // console.log(\"Sucess\");\r\n               toast.success(\"Login Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n               setTimeout(() => {\r\n                  if (userInfo.role && userInfo.role === \"admin\") {\r\n                     history.push(\"/admin-dashboard\");\r\n                  } else {\r\n                     history.push(\"/user-dashboard\");\r\n                  }\r\n               }, 2000);\r\n            } else {\r\n               // console.log(\"Sucess\");\r\n               toast.success(\"User email & password doesn't match\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"User email & password doesn't match\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n         });\r\n   };\r\n};\r\n\r\n//Logout Action\r\nexport const logout = () => {\r\n   return (dispatch) => {\r\n      dispatch({ type: \"LOGOUT\" });\r\n   };\r\n};\r\n\r\n//To Change Role\r\nexport const changeRole = (role) => {\r\n   return (dispatch) => dispatch({ type: \"CHANGE_ROLE\", userRole: role });\r\n};\r\n\r\n//Create Forgot Password\r\nexport const forgotPass = (data) => async (dispatch) => {\r\n   // console.log(\"ADD LEAD\",data)\r\n   let obj = {\r\n      email: data.email,\r\n   };\r\n   // console.log('OBJ',obj)\r\n   const res = await axios.put(\"/forgotpassword\", obj);\r\n   // console.log('Response',res)\r\n   return res;\r\n};\r\n\r\n//Create Reset Password\r\nexport const resetPass = (data) => async (dispatch) => {\r\n   // console.log(\"ADD LEAD\",data)\r\n   const res = await axios.put(\"/resetpassword\", data);\r\n   // console.log('Response',res)\r\n   return res;\r\n};\r\n//Update the User\r\nexport const UpdateUsers = (id, data) => async (dispatch) => {\r\n   console.log(\"ADD USER\", data);\r\n   const bodyFormData = new FormData();\r\n   bodyFormData.append(\"userId\", data._id);\r\n   bodyFormData.append(\"status\", data.status);\r\n   bodyFormData.append(\"firstName\", data.firstName);\r\n   bodyFormData.append(\"lastName\", data.lastName);\r\n   bodyFormData.append(\"email\", data.email);\r\n   bodyFormData.append(\"address\", data.address);\r\n   bodyFormData.append(\"mobile\", data.mobile);\r\n   bodyFormData.append(\"avtar\", data.avtar);\r\n   const res = await axios.post(`edit/users/${id}`, bodyFormData);\r\n   console.log(\"Update USER=======\", res);\r\n   return res;\r\n};\r\n//Get Update By ID\r\nexport const getUpdateById = (id) => async (dispatch) => {\r\n   //console.log(\"LEADContact ID1\",id)\r\n   const res = await axios.get(`/get/users/${id}`);\r\n   // console.log(\"--RES\",res)\r\n   return res;\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, userInfo, ...rest }) => {\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={(props) => {\r\n            console.log(\"Propssssssssss\", userInfo);\r\n            if (userInfo) {\r\n               if (userInfo.role && userInfo.role === \"user\") {\r\n                  return <Component {...props} />;\r\n               } else {\r\n                  return <Redirect to=\"/login\" />;\r\n               }\r\n            } else {\r\n               return <Redirect to=\"/login\" />;\r\n            }\r\n         }}\r\n      />\r\n   );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AdminRoute = ({ component: Component, userInfo, ...rest }) => {\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={(props) => {\r\n            console.log(\"Propssssssssss\", userInfo);\r\n            if (userInfo) {\r\n               if (userInfo.role && userInfo.role === \"admin\") {\r\n                  return <Component {...props} />;\r\n               } else {\r\n                  return <h2>You're not admin</h2>;\r\n               }\r\n            } else {\r\n               return <Redirect to=\"/login\" />;\r\n            }\r\n         }}\r\n      />\r\n   );\r\n};\r\n\r\nexport default AdminRoute;\r\n","require(\"dotenv\").config();\r\n\r\nconst axiosInstance = {\r\n   baseURL:\r\n      process.env.REACT_APP_PUBLIC_PATH ||\r\n      \"https://immense-mesa-71524.herokuapp.com/upload/\",\r\n};\r\n// axiosInstance.defaults.headers.common['Authorization'] = 'AUTH TOKEN FROM INSTANCE'\r\nexport default axiosInstance;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"../../../history\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport * as PATH from \"../../../configs/imgConfig\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   Card,\r\n   Row,\r\n   Media,\r\n   Col,\r\n   ListGroup,\r\n   ListGroupItem,\r\n} from \"reactstrap\";\r\nclass UserDashboard extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         userdata: this.props.userInfo,\r\n         rowData: [],\r\n      };\r\n      console.log(\"UserData\", this.props);\r\n   }\r\n   componentDidMount = () => {\r\n      const rowData = this.state.userdata;\r\n\r\n      this.setState({ rowData });\r\n   };\r\n\r\n   render() {\r\n      const { rowData } = this.state;\r\n      console.log(\"ROWDATA\", rowData);\r\n      return (\r\n         <Row>\r\n            <Col sm=\"12\">\r\n               <Card className=\"pt-4\">\r\n                  <CardHeader className=\"text-center\">\r\n                     <strong>User Dashboard</strong>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                     <Col sm=\"12\">\r\n                        <Row>\r\n                           <Col sm=\"3\">\r\n                              <Card>\r\n                                 <CardHeader className=\"bg-dark text-white\">\r\n                                    User Navigation\r\n                                 </CardHeader>\r\n                                 <CardBody>\r\n                                    <ul className={\"list-group\"}>\r\n                                       <li className={\"list-group-item\"}>\r\n                                          <Link\r\n                                             to={\"/edit/user\"}\r\n                                             className={\"nav-link text-success\"}\r\n                                          >\r\n                                             Edit Profile\r\n                                          </Link>\r\n                                       </li>\r\n                                       {/* <li className={\"list-group-item\"}>\r\n                                          <Link\r\n                                             to={\"/admin/categories\"}\r\n                                             className={\"nav-link text-success\"}\r\n                                          >\r\n                                             Manage Categories\r\n                                          </Link>\r\n                                       </li>\r\n                                       <li className={\"list-group-item\"}>\r\n                                          <Link\r\n                                             to={\"/admin/create/product\"}\r\n                                             className={\"nav-link text-success\"}\r\n                                          >\r\n                                             Create Product\r\n                                          </Link>\r\n                                       </li>\r\n                                       <li className={\"list-group-item\"}>\r\n                                          <Link\r\n                                             to={\"/admin/products\"}\r\n                                             className={\"nav-link text-success\"}\r\n                                          >\r\n                                             Manage Products\r\n                                          </Link>\r\n                                       </li>\r\n                                       <li className={\"list-group-item\"}>\r\n                                          <Link\r\n                                             to={\"/admin/orders\"}\r\n                                             className={\"nav-link text-success\"}\r\n                                          >\r\n                                             Manage Orders\r\n                                          </Link>\r\n                                       </li> */}\r\n                                    </ul>\r\n                                 </CardBody>\r\n                              </Card>\r\n                           </Col>\r\n\r\n                           <Col sm=\"9\">\r\n                              <Card className=\"mb-4\">\r\n                                 <CardHeader className=\"text-center\">\r\n                                    <strong>User Information</strong>\r\n                                 </CardHeader>\r\n                                 <CardBody>\r\n                                    <Col sm=\"12\">\r\n                                       <Row>\r\n                                          <Col sm=\"12\">\r\n                                             <ListGroup>\r\n                                                <ListGroupItem>\r\n                                                   <Media className=\"d-sm-flex d-block\">\r\n                                                      <Media\r\n                                                         className=\"mt-md-1 mt-0\"\r\n                                                         left\r\n                                                      >\r\n                                                         <Media\r\n                                                            className=\"rounded mr-2\"\r\n                                                            object\r\n                                                            src={\r\n                                                               PATH.default\r\n                                                                  .baseURL +\r\n                                                               \"\" +\r\n                                                               rowData.avtar\r\n                                                            }\r\n                                                            alt=\"Generic placeholder image\"\r\n                                                            height=\"112\"\r\n                                                            width=\"112\"\r\n                                                         />\r\n                                                      </Media>\r\n                                                      {console.log(PATH)}\r\n                                                   </Media>\r\n                                                </ListGroupItem>\r\n                                             </ListGroup>\r\n                                          </Col>\r\n                                          <Col md=\"6\" sm=\"12\">\r\n                                             <ListGroup>\r\n                                                <ListGroupItem>\r\n                                                   <span\r\n                                                      className={\r\n                                                         \"badge badge-success mr-2\"\r\n                                                      }\r\n                                                   >\r\n                                                      FirstName:\r\n                                                   </span>\r\n                                                   {rowData.firstName}\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                   <span\r\n                                                      className={\r\n                                                         \"badge badge-success mr-2\"\r\n                                                      }\r\n                                                   >\r\n                                                      LastName:\r\n                                                   </span>\r\n                                                   {rowData.lastName}\r\n                                                </ListGroupItem>\r\n                                             </ListGroup>\r\n                                          </Col>\r\n                                          <Col md=\"6\" sm=\"12\">\r\n                                             <ListGroup>\r\n                                                <ListGroupItem>\r\n                                                   <span\r\n                                                      className={\r\n                                                         \"badge badge-success mr-2\"\r\n                                                      }\r\n                                                   >\r\n                                                      Email:\r\n                                                   </span>\r\n                                                   {rowData.email}\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>\r\n                                                   <span\r\n                                                      className={\r\n                                                         \"badge badge-success mr-2\"\r\n                                                      }\r\n                                                   >\r\n                                                      Phone No:\r\n                                                   </span>\r\n                                                   {rowData.mobile}\r\n                                                </ListGroupItem>\r\n                                             </ListGroup>\r\n                                          </Col>\r\n                                          <Col sm=\"12\">\r\n                                             <ListGroup>\r\n                                                <ListGroupItem>\r\n                                                   <span\r\n                                                      className={\r\n                                                         \"badge badge-success mr-2\"\r\n                                                      }\r\n                                                   >\r\n                                                      Address:\r\n                                                   </span>\r\n                                                   {rowData.address}\r\n                                                </ListGroupItem>\r\n                                             </ListGroup>\r\n                                          </Col>\r\n                                       </Row>\r\n                                    </Col>\r\n                                 </CardBody>\r\n                              </Card>\r\n                           </Col>\r\n                        </Row>\r\n                     </Col>\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return { userInfo: state.auth.login.userInfo };\r\n};\r\n// const mapDispatchtoProps = (dispatch) => {\r\n//    return {\r\n//       handleClick: () => dispatch({ type: \"SUCCESS\" }),\r\n//    };\r\n// };\r\nexport default connect(mapStateToProps)(UserDashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport * as PATH from \"../../../configs/imgConfig\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   Card,\r\n   Row,\r\n   Col,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport * as UserAction from \"../../../redux/actions/auth/auth\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass UpdateUser extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         userdata: this.props.userInfo,\r\n         rowData: [],\r\n         formData: {},\r\n      };\r\n      // console.log(\"UserData\", this.props);\r\n   }\r\n   componentDidMount = () => {\r\n      const id = this.state.userdata._id;\r\n\r\n      this.props.dispatch(UserAction.getUpdateById(id)).then((res) => {\r\n         console.log(\"BY Id\", res);\r\n         if (res) {\r\n            this.setState({ formData: res.data }); //() => {console.log();}\r\n         }\r\n      });\r\n   };\r\n   //handle the Input\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [event.target.name]: event.target.value,\r\n            },\r\n         }),\r\n         () => console.log(this.state.formData)\r\n      );\r\n   };\r\n   //handle the Image\r\n   handleavtar = (event) => {\r\n      event.persist();\r\n      this.setState((prevState) => ({\r\n         formData: {\r\n            ...prevState.formData,\r\n            [event.target.name]: event.target.files[0],\r\n         },\r\n      }));\r\n   };\r\n\r\n   //To submit the Data\r\n   handleFormSubmit = () => {\r\n      const id = this.state.userdata._id;\r\n      this.props\r\n         .dispatch(UserAction.UpdateUsers(id, this.state.formData))\r\n         .then((res) => {\r\n            console.log(\"Updated DATAA\", res);\r\n            if (!res.data) {\r\n               //Add success message in Toast\r\n               // console.log(\"ERROR\");\r\n               toast.error(\"Update data is not Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            } else {\r\n               // console.log(\"Sucess\");\r\n               toast.success(\"Updated Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n               setTimeout(() => {\r\n                  history.push(\"/user-dashboard\");\r\n               }, 3000);\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"Update data is not Successfully\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n         });\r\n   };\r\n   handleReset = () => {\r\n      this.setState({ formData: {} });\r\n   };\r\n   render() {\r\n      return (\r\n         <Row>\r\n            <Col sm=\"12\">\r\n               <Card className=\"pt-4\">\r\n                  <CardHeader>\r\n                     <div className=\"d-flex justify-content-between\">\r\n                        <strong className=\"mt-2\">Update User</strong>\r\n                        <Button\r\n                           className=\"add-new-btn\"\r\n                           color=\"primary\"\r\n                           onClick={() =>\r\n                              this.props.history.push(\"/user-dashboard\")\r\n                           }\r\n                           outline\r\n                        >\r\n                           <span className=\"align-middle\">\r\n                              Back to User Dashboard\r\n                           </span>\r\n                        </Button>\r\n                     </div>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                     <Col sm=\"12\">\r\n                        <Form\r\n                           onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              this.handleFormSubmit();\r\n                           }}\r\n                        >\r\n                           <Row className=\"bg-white rounded\">\r\n                              <Col md=\"6\" sm=\"12\">\r\n                                 <FormGroup>\r\n                                    <Label>FirstName</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       id=\"firstName\"\r\n                                       name=\"firstName\"\r\n                                       placeholder=\"First Name\"\r\n                                       onChange={this.handleInput}\r\n                                       value={\r\n                                          this.state.formData &&\r\n                                          this.state.formData.firstName\r\n                                             ? this.state.formData.firstName\r\n                                             : \"\"\r\n                                       }\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col md=\"6\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Last Name</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"Last Name\"\r\n                                       name=\"lastName\"\r\n                                       onChange={this.handleInput}\r\n                                       value={\r\n                                          this.state.formData &&\r\n                                          this.state.formData.lastName\r\n                                             ? this.state.formData.lastName\r\n                                             : \"\"\r\n                                       }\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col md=\"6\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Email</Label>\r\n                                    <Input\r\n                                       type=\"email\"\r\n                                       placeholder=\"Email\"\r\n                                       name=\"email\"\r\n                                       onChange={this.handleInput}\r\n                                       value={\r\n                                          this.state.formData &&\r\n                                          this.state.formData.email\r\n                                             ? this.state.formData.email\r\n                                             : \"\"\r\n                                       }\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md=\"6\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Avtar</Label>\r\n                                    <CustomInput\r\n                                       type=\"file\"\r\n                                       id=\"avtar\"\r\n                                       name=\"avtar\"\r\n                                       onChange={this.handleavtar}\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md=\"6\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Phone No</Label>\r\n                                    <Input\r\n                                       type=\"Number\"\r\n                                       placeholder=\"Phone No.\"\r\n                                       name=\"mobile\"\r\n                                       onChange={this.handleInput}\r\n                                       value={\r\n                                          this.state.formData &&\r\n                                          this.state.formData.mobile\r\n                                             ? this.state.formData.mobile\r\n                                             : \"\"\r\n                                       }\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col md=\"6\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Address</Label>\r\n                                    <Input\r\n                                       type=\"textarea\"\r\n                                       placeholder=\"Address\"\r\n                                       name=\"address\"\r\n                                       onChange={this.handleInput}\r\n                                       value={\r\n                                          this.state.formData &&\r\n                                          this.state.formData.address\r\n                                             ? this.state.formData.address\r\n                                             : \"\"\r\n                                       }\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col\r\n                                 className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                                 sm=\"12\"\r\n                              >\r\n                                 <Button\r\n                                    className=\"mr-1\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    //onClick={this.props.leadId}\r\n                                 >\r\n                                    Update\r\n                                 </Button>\r\n                                 <ToastContainer />\r\n                                 <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => this.handleReset()}\r\n                                    type=\"button\"\r\n                                 >\r\n                                    Reset\r\n                                 </Button>\r\n                              </Col>\r\n                           </Row>\r\n                        </Form>\r\n                     </Col>\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return { userInfo: state.auth.login.userInfo };\r\n};\r\n// const mapDispatchtoProps = (dispatch) => {\r\n//    return {\r\n//       handleClick: () => dispatch({ type: \"SUCCESS\" }),\r\n//    };\r\n// };\r\nexport default connect(mapStateToProps)(UpdateUser);\r\n","import React from \"react\";\r\n\r\nclass AdminDashboard extends React.Component {\r\n   render() {\r\n      return <h4>You're AdminDashboard.</h4>;\r\n   }\r\n}\r\n\r\nexport default AdminDashboard;\r\n","import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n   render() {\r\n      return <h4>You're Home.</h4>;\r\n   }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   Card,\r\n   Row,\r\n   Col,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport { loginWithJWT } from \"../../../redux/actions/auth/auth\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { history } from \"../../../history\";\r\nclass Login extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         counter: 0,\r\n         formData: {},\r\n      };\r\n      console.log(\"PROPSSS\", this.props);\r\n   }\r\n   //handleInput\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState((prevState) => ({\r\n         formData: {\r\n            ...prevState.formData,\r\n            [event.target.name]: event.target.value,\r\n         },\r\n      }));\r\n   };\r\n   //Handle Form Submit\r\n   handleFormSubmit = () => {\r\n      console.log(\"FORMDATA===\", this.state.formData);\r\n      this.props.dispatch(loginWithJWT(this.state.formData));\r\n   };\r\n   render() {\r\n      return (\r\n         <Row className=\"m-0 justify-content-center\">\r\n            <Col\r\n               sm=\"8\"\r\n               xl=\"7\"\r\n               lg=\"10\"\r\n               md=\"8\"\r\n               className=\"d-flex justify-content-center pt-4\"\r\n            >\r\n               <Card className=\"rounded-0 mb-0 px-2\">\r\n                  <CardHeader>Login</CardHeader>\r\n                  <CardBody>\r\n                     <Col sm=\"12\">\r\n                        <Form\r\n                           onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              this.handleFormSubmit();\r\n                           }}\r\n                        >\r\n                           <Row>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup>\r\n                                    <Label>Email</Label>\r\n                                    <Input\r\n                                       type=\"email\"\r\n                                       placeholder=\"Email\"\r\n                                       name=\"email\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup>\r\n                                    <Label>Password</Label>\r\n                                    <Input\r\n                                       type=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n                                    <CustomInput\r\n                                       className=\"pt-1 ml-2\"\r\n                                       type=\"checkbox\"\r\n                                       name=\"donotcall\"\r\n                                       id=\"donotcall\"\r\n                                       label=\"Remember me\"\r\n                                       //checked = {this.state.formData}\r\n                                       //onChange={this.onCheckChange}\r\n                                    />\r\n                                    <div className=\"float-right\">\r\n                                       <NavLink\r\n                                          to=\"/forgotpassword\"\r\n                                          exact\r\n                                          className=\"nav-link\"\r\n                                       >\r\n                                          Forgot Password?\r\n                                       </NavLink>\r\n                                    </div>\r\n                                 </FormGroup>\r\n                                 <div className=\"d-flex justify-content-between\">\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       outline\r\n                                       onClick={() => {\r\n                                          history.push(\"/register\");\r\n                                       }}\r\n                                    >\r\n                                       Register\r\n                                    </Button>\r\n                                    <Button color=\"primary\" type=\"submit\">\r\n                                       Login\r\n                                    </Button>\r\n                                 </div>\r\n                                 <ToastContainer />\r\n                              </Col>\r\n                           </Row>\r\n                        </Form>\r\n                     </Col>\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {};\r\n};\r\n// const mapDispatchtoProps = (dispatch) => {\r\n//    return {\r\n\r\n//    };\r\n// };\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   Card,\r\n   Row,\r\n   Col,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport { RegUsers } from \"../../../redux/actions/auth/auth\";\r\nimport * as RegActions from \"../../../redux/actions/auth/auth\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../../../history\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nclass Register extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         counter: 0,\r\n         formData: {},\r\n         erroMsg: false,\r\n      };\r\n      console.log(\"PROPSSS\", this.props);\r\n   }\r\n   //handle the Input\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [event.target.name]: event.target.value,\r\n            },\r\n         }),\r\n         () => console.log(this.state.formData)\r\n      );\r\n   };\r\n   //handle the Image\r\n   handleavtar = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [event.target.name]: event.target.files[0],\r\n            },\r\n         }),\r\n         () => console.log(event.target.files)\r\n      );\r\n   };\r\n\r\n   //To submit the Data\r\n   handleFormSubmit = () => {\r\n      if (this.state.formData.avtar) {\r\n         this.props\r\n            .dispatch(RegUsers(this.state.formData))\r\n            .then((res) => {\r\n               console.log(\"REGISTER DATAA\", res);\r\n               if (!res.data) {\r\n                  //Add success message in Toast\r\n                  // console.log(\"ERROR\");\r\n                  toast.error(\"Register is not Successfully\", {\r\n                     position: toast.POSITION.BOTTOM_RIGHT,\r\n                  });\r\n               } else {\r\n                  // console.log(\"Sucess\");\r\n                  toast.success(\"Register Successfully\", {\r\n                     position: toast.POSITION.BOTTOM_RIGHT,\r\n                  });\r\n                  setTimeout(() => {\r\n                     history.push(\"/login\");\r\n                  }, 3000);\r\n               }\r\n            })\r\n            .catch((error) => {\r\n               // show error message in Toast\r\n               toast.error(\"Register is not Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            });\r\n      } else {\r\n         this.setState({ erroMsg: true });\r\n         // show error message in Toast\r\n         toast.error(\"Please Upload Image..\", {\r\n            position: toast.POSITION.BOTTOM_RIGHT,\r\n         });\r\n      }\r\n   };\r\n   handleReset = () => {\r\n      this.setState({ formData: {} });\r\n    };\r\n   render() {\r\n      return (\r\n         <Row className=\"m-0\">\r\n            <Col sm=\"12\" className=\" pt-4\">\r\n               <Card className=\"rounded-0 mb-0 px-2\">\r\n                  <CardHeader>Register</CardHeader>\r\n                  <CardBody>\r\n                     <Col sm=\"12\">\r\n                        <Form\r\n                           onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              this.handleFormSubmit();\r\n                           }}\r\n                        >\r\n                           <Row>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup>\r\n                                    <Label>FirstName</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"First Name\"\r\n                                       name=\"firstName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Last Name</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"Last Name\"\r\n                                       name=\"lastName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Email</Label>\r\n                                    <Input\r\n                                       type=\"email\"\r\n                                       placeholder=\"Email\"\r\n                                       name=\"email\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Password</Label>\r\n                                    <Input\r\n                                       type=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Avtar</Label>\r\n                                    <CustomInput\r\n                                       type=\"file\"\r\n                                       id=\"avtar\"\r\n                                       name=\"avtar\"\r\n                                       onChange={this.handleavtar}\r\n                                    />\r\n                                    <p className=\"text-danger\">\r\n                                       *This field is required\r\n                                    </p>\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Address</Label>\r\n                                    <Input\r\n                                       type=\"textarea\"\r\n                                       placeholder=\"Address\"\r\n                                       name=\"address\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Phone No</Label>\r\n                                    <Input\r\n                                       type=\"Number\"\r\n                                       placeholder=\"Phone No.\"\r\n                                       name=\"mobile\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n\r\n                                 <Col\r\n                                    className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                                    sm=\"12\"\r\n                                 >\r\n                                    <Button\r\n                                       className=\"mr-1\"\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       //onClick={this.props.leadId}\r\n                                    >\r\n                                       Register\r\n                                    </Button>\r\n                                    <ToastContainer />\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       outline\r\n                                       onClick={() => this.handleReset()}\r\n                                       type=\"button\"\r\n                                    >\r\n                                       Reset\r\n                                    </Button>\r\n                                 </Col>\r\n                              </Col>\r\n                           </Row>\r\n                        </Form>\r\n                     </Col>\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return { dispatch };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n","import React from \"react\";\r\nimport {\r\n   Card,\r\n   CardHeader,\r\n   CardTitle,\r\n   CardBody,\r\n   Row,\r\n   Col,\r\n   FormGroup,\r\n   Form,\r\n   Input,\r\n   Button,\r\n   Label,\r\n} from \"reactstrap\";\r\nimport fgImg from \"../../../imgs/forgot-password.png\";\r\nimport { history } from \"../../../history\";\r\nimport { connect } from \"react-redux\";\r\nimport { forgotPass } from \"../../../redux/actions/auth/auth\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass ForgotPassword extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         formData: {},\r\n      };\r\n   }\r\n   //handleInput\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState((prevState) => ({\r\n         formData: {\r\n            ...prevState.formData,\r\n            [event.target.name]: event.target.value,\r\n         },\r\n      }));\r\n   };\r\n\r\n   //Handle Form Submit to store the data in DB\r\n   handleFormSubmit = () => {\r\n      console.log(\"FORMDATA===\", this.state.formData);\r\n      this.props\r\n         .dispatch(forgotPass(this.state.formData))\r\n         .then((res) => {\r\n            // console.log(\"RRRRRR\", res);\r\n            if (res.data) {\r\n               // Add success message in Toast\r\n               toast.success(\r\n                  \"Email has been sent, kindly Follow the instruction\",\r\n                  {\r\n                     position: toast.POSITION.BOTTOM_RIGHT,\r\n                  }\r\n               );\r\n            } else {\r\n               // show error message in Toast\r\n               toast.error(\"Something went wrong\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"Something went wrong\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n         });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <Row className=\"m-0 justify-content-center\">\r\n            <Col\r\n               sm=\"8\"\r\n               xl=\"7\"\r\n               lg=\"10\"\r\n               md=\"8\"\r\n               className=\"d-flex justify-content-center pt-5\"\r\n            >\r\n               <Card>\r\n                  <Row className=\"m-0\">\r\n                     <Col\r\n                        lg=\"6\"\r\n                        className=\"d-lg-block d-none text-center align-self-center\"\r\n                     >\r\n                        <img src={fgImg} alt=\"fgImg\" />\r\n                     </Col>\r\n                     <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n                        <Card className=\"rounded-0 mb-0 px-2 py-1\">\r\n                           <CardHeader className=\"pb-1\">\r\n                              <CardTitle>\r\n                                 <h4 className=\"mb-0\">Password Assistance</h4>\r\n                              </CardTitle>\r\n                           </CardHeader>\r\n                           <p className=\"px-2 auth-title\">\r\n                              Please enter your email address and we'll send you\r\n                              instructions on how to reset your password.\r\n                           </p>\r\n                           <CardBody className=\"pt-1 pb-0\">\r\n                              <Form\r\n                                 onSubmit={(e) => {\r\n                                    e.preventDefault();\r\n                                    this.handleFormSubmit();\r\n                                 }}\r\n                              >\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Email</Label>\r\n                                    <Input\r\n                                       type=\"email\"\r\n                                       placeholder=\"Email\"\r\n                                       name=\"email\"\r\n                                       onChange={this.handleInput}\r\n                                       // value={this.state.email}\r\n                                       // onChange={e => this.setState({ email: e.target.value })}\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <div className=\"float-md-left d-block mb-1 pt-3\">\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       outline\r\n                                       onClick={() => {\r\n                                          history.push(\"/login\");\r\n                                       }}\r\n                                    >\r\n                                       Back to Login\r\n                                    </Button>\r\n                                 </div>\r\n                                 <div className=\"float-md-right d-block mb-1 pt-3\">\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       className=\"px-75 btn-block\"\r\n                                       //   onClick={e => {\r\n                                       //     e.preventDefault()\r\n                                       //     history.push(\"/dashboard\")\r\n                                       //   }}\r\n                                    >\r\n                                       Continue\r\n                                    </Button>\r\n                                    <ToastContainer />\r\n                                 </div>\r\n                              </Form>\r\n                           </CardBody>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {};\r\n};\r\nexport default connect(mapStateToProps)(ForgotPassword);\r\n","import React from \"react\";\r\nimport {\r\n   Card,\r\n   CardHeader,\r\n   CardTitle,\r\n   CardBody,\r\n   Row,\r\n   Col,\r\n   FormGroup,\r\n   Form,\r\n   Input,\r\n   Button,\r\n   Label,\r\n} from \"reactstrap\";\r\nimport fgImg from \"../../../imgs/forgot-password.png\";\r\nimport { history } from \"../../../history\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetPass } from \"../../../redux/actions/auth/auth\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass ResetPassword extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         newPass: \"\",\r\n         userInfo: this.props.userInfo,\r\n      };\r\n   }\r\n   //handleInput\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            newPass: {\r\n               ...prevState.newPass,\r\n               [event.target.name]: event.target.value,\r\n            },\r\n         }),\r\n         () => console.log(\"Name Input\", event.target.value)\r\n      );\r\n   };\r\n   //Handle Form Submit\r\n   handleFormSubmit = (resetLink) => {\r\n      console.log(\"ResetLink---------\", resetLink);\r\n      console.log(\"FORMDATA===\", this.state.newPass);\r\n      const obj = {\r\n         resetLink: resetLink,\r\n         newPass: this.state.newPass.password,\r\n      };\r\n      this.props\r\n         .dispatch(resetPass(obj))\r\n         .then((res) => {\r\n            // console.log('RRRRRR',res)\r\n            if (res.data) {\r\n               // Add success message in Toast\r\n               toast.success(\"Your Password hab been Changed\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n               setTimeout(() => {\r\n                  history.push(\"/login\");\r\n               }, 3000);\r\n            } else {\r\n               // show error message in Toast\r\n               toast.error(\"USER with a ResetLink does not exists\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"USER with a ResetLink does not exists\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n            setTimeout(() => {\r\n               history.push(\"/forgotpassword\");\r\n            }, 3000);\r\n         });\r\n   };\r\n   render() {\r\n      const search = this.props.location.search;\r\n      const resetLink = search.split(\"=\")[1];\r\n      return (\r\n         <Row className=\"m-0 justify-content-center\">\r\n            <Col\r\n               sm=\"8\"\r\n               xl=\"7\"\r\n               lg=\"10\"\r\n               md=\"8\"\r\n               className=\"d-flex justify-content-center pt-5\"\r\n            >\r\n               <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n                  <Row className=\"m-0\">\r\n                     <Col\r\n                        lg=\"6\"\r\n                        className=\"d-lg-block d-none text-center align-self-center\"\r\n                     >\r\n                        <img src={fgImg} alt=\"fgImg\" />\r\n                     </Col>\r\n                     <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n                        <Card className=\"rounded-0 mb-0 px-2 py-1\">\r\n                           <CardHeader className=\"pb-1\">\r\n                              <CardTitle>\r\n                                 <h4 className=\"mb-0\">Recover your password</h4>\r\n                              </CardTitle>\r\n                           </CardHeader>\r\n                           <p className=\"px-2 auth-title\">\r\n                              Please enter your <strong>New Password</strong>\r\n                           </p>\r\n                           <CardBody className=\"pt-1 pb-0\">\r\n                              <Form\r\n                                 onSubmit={(e) => {\r\n                                    e.preventDefault();\r\n                                    this.handleFormSubmit(resetLink);\r\n                                 }}\r\n                              >\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Password</Label>\r\n                                    <Input\r\n                                       type=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       name=\"password\"\r\n                                       //value={this.state.newPass}\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <div className=\"float-md-center d-block mb-1\">\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       className=\"px-75 btn-block\"\r\n                                       //   onClick={e => {\r\n                                       //     e.preventDefault()\r\n                                       //     history.push(\"/dashboard\")\r\n                                       //   }}\r\n                                    >\r\n                                       Recover Password\r\n                                    </Button>\r\n                                    <ToastContainer />\r\n                                 </div>\r\n                              </Form>\r\n                           </CardBody>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {};\r\n};\r\nexport default connect(mapStateToProps)(ResetPassword);\r\n","import React, { Component } from \"react\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { history } from \"./history\";\r\nimport Menu from \"./navbar/menu\";\r\nimport { connect } from \"react-redux\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport AdminRoute from \"./AdminRoute\";\r\n//user Dashboard\r\nimport UserDashboard from \"./views/pages/UserDashboard/UserDashboard\";\r\n\r\n//Update the user\r\nimport UpdateUser from \"./views/pages/UserDashboard/UpdateUser\";\r\n\r\n//admin Dashboard\r\nimport AdminDashboard from \"./views/pages/AdminDashboard/AdminDashboard\";\r\n\r\n//Home Dashboard\r\nimport Home from \"./views/pages/UserDashboard/Home\";\r\n//Authentication\r\nimport Login from \"./views/pages/authentication/Login\";\r\nimport Register from \"./views/pages/authentication/Register\";\r\nimport ForgotPassword from \"./views/pages/authentication/ForgotPassword\";\r\nimport ResetPassword from \"./views/pages/authentication/ResetPassword\";\r\n\r\nclass Routes extends Component {\r\n   render() {\r\n      console.log(\"Routes\", this.props);\r\n      return (\r\n         <div>\r\n            <Router history={history}>\r\n               <Menu />\r\n               <Switch>\r\n                  <Route exact path=\"/\" component={Home} />\r\n\r\n                  <Route exact path=\"/login\" component={Login} />\r\n                  <Route exact path=\"/register\" component={Register} />\r\n                  <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n                  <Route path=\"/resetpassword\" component={ResetPassword} />\r\n                  {/* {Object.keys(this.props.userInfo).length !== 0 ? (\r\n                     <PrivateRoute\r\n                        userInfo={this.props.userInfo}\r\n                        exact\r\n                        path=\"/\"\r\n                        component={UserDashboard}\r\n                     />\r\n                  ) : (\r\n                     <Route exact path=\"/\" component={Login} />\r\n                  )} */}\r\n                  {/* For user side */}\r\n                  <PrivateRoute\r\n                     userInfo={this.props.userInfo}\r\n                     exact\r\n                     path=\"/user-dashboard\"\r\n                     component={UserDashboard}\r\n                  />\r\n                  {/* For Update user  */}\r\n                  <PrivateRoute\r\n                     userInfo={this.props.userInfo}\r\n                     exact\r\n                     path=\"/edit/user\"\r\n                     component={UpdateUser}\r\n                  />\r\n                  {/* For admin side */}\r\n                  <AdminRoute\r\n                     userInfo={this.props.userInfo}\r\n                     exact\r\n                     path=\"/admin-dashboard\"\r\n                     component={AdminDashboard}\r\n                  />\r\n               </Switch>\r\n            </Router>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nexport default connect(mapStateToProps)(Routes);\r\n","import React from \"react\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n   return <Routes />;\n}\n\nexport default App;\n","export const initialState = {\r\n        isSuccess: false,\r\n};\r\n\r\n//To Store the Actions\r\nconst global = (state = initialState, action) => {\r\n        switch (action.type) {\r\n                case \"SUCCESS\":\r\n                        return {\r\n                                ...state,\r\n                                isSuccess: true,\r\n                        };\r\n                case \"FAIL\":\r\n                        return {\r\n                                ...state,\r\n                                isSuccess: false,\r\n                        };\r\n                default:\r\n                        return state;\r\n        }\r\n};\r\nexport default global;\r\n","const initialState = {\r\n   userRole: \"admin\",\r\n   userInfo: \"\",\r\n   accessToken: \"\",\r\n};\r\n\r\n//To Store the Action\r\nexport const login = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case \"LOGIN_WITH_JWT\":\r\n         return Object.assign({}, state, {\r\n            userInfo: action.payload.userInfo,\r\n            accessToken: action.payload.accessToken,\r\n         });\r\n      case \"LOGOUT\":\r\n         return initialState;\r\n\r\n      case \"CHANGE_ROLE\":\r\n         return { userRole: action.userRole };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { login } from \"./loginReducer\";\r\n\r\nconst authReducers = combineReducers({\r\n   login,\r\n});\r\n\r\nexport default authReducers;\r\n","import globalReducer from \"./global/global\";\r\nimport auth from \"./auth/\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst persistConfig = {\r\n   key: \"jwt\",\r\n   storage,\r\n   whitelist: [\"auth\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n   globalReducer: globalReducer,\r\n   auth: auth,\r\n});\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createDebounce from \"redux-debounced\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst middlewares = [thunk, createDebounce()];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(\r\n   rootReducer,\r\n   {},\r\n   composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/storeConfig/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n   <Provider store={store}>\n      <PersistGate persistor={persistor}>\n         <HashRouter>\n            <App />\n         </HashRouter>\n      </PersistGate>\n   </Provider>,\n\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}